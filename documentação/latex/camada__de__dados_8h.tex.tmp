\hypertarget{camada__de__dados_8h}{}\section{Referência ao ficheiro camada\+\_\+de\+\_\+dados.\+h}
\label{camada__de__dados_8h}\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
{\ttfamily \#include \char`\"{}listas.\+h\char`\"{}}\newline
Diagrama de dependências de inclusão para camada\+\_\+de\+\_\+dados.\+h\+:
% FIG 0
\subsection*{Componentes}
\begin{DoxyCompactItemize}
\item 
struct \hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA}
\item 
struct \hyperlink{structJOGADA}{J\+O\+G\+A\+DA}
\item 
struct \hyperlink{structESTADO}{E\+S\+T\+A\+DO}
\end{DoxyCompactItemize}
\subsection*{Definições de tipos}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{camada__de__dados_8h_a94c221d29a1760f008b7834093259b7d}\label{camada__de__dados_8h_a94c221d29a1760f008b7834093259b7d}} 
typedef \hyperlink{structJOGADA}{J\+O\+G\+A\+DA} {\bfseries J\+O\+G\+A\+D\+AS}\mbox{[}32\mbox{]}
\end{DoxyCompactItemize}
\subsection*{Enumerações}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{camada__de__dados_8h_aba91601f16d4c485b2d9b8c429f27039}\label{camada__de__dados_8h_aba91601f16d4c485b2d9b8c429f27039}} 
enum {\bfseries C\+A\+SA} \{ {\bfseries V\+A\+Z\+IO} = \textquotesingle{}.\textquotesingle{}, 
{\bfseries B\+R\+A\+N\+CA} = \textquotesingle{}$\ast$\textquotesingle{}, 
{\bfseries P\+R\+E\+TA} = \textquotesingle{}\#\textquotesingle{}
 \}
\end{DoxyCompactItemize}
\subsection*{Funções}
\begin{DoxyCompactItemize}
\item 
\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$ \hyperlink{camada__de__dados_8h_a7e0c7e26fb685d9ab501e19b05e6954f}{inicializar\+\_\+estado} ()
\item 
void \hyperlink{camada__de__dados_8h_a0609098f15b2ec0d7c994f7ea3667455}{empty\+\_\+tabuleiro} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e)
\item 
int \hyperlink{camada__de__dados_8h_ad6e326e4ffa57ca1ae0c75377ecefc8c}{obter\+\_\+jogador\+\_\+atual} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado)
\item 
C\+A\+SA \hyperlink{camada__de__dados_8h_af07a315536e57ea96b16c3e232e9eb54}{obter\+\_\+estado\+\_\+casa} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, int c, int l)
\item 
int \hyperlink{camada__de__dados_8h_abac41dceaa2551d1def3f4fbb06b0758}{is\+\_\+near\+\_\+branca} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado, int colatual, int linatual)
\item 
void \hyperlink{camada__de__dados_8h_a55106112fc732be07081af171cd0ee29}{put\+\_\+branca} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado, int col, int lin)
\item 
void \hyperlink{camada__de__dados_8h_aad79e0ccf12ac3d67684bde2f2e4ed40}{put\+\_\+preta} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado)
\item 
void \hyperlink{camada__de__dados_8h_a6bf7f42979ba1ed2a8046535ff25ccb1}{atualiza\+\_\+ultima\+\_\+jogada} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado, int col, int lin)
\item 
int \hyperlink{camada__de__dados_8h_a1f4df241c1ad82e53a8a13cd6fcb9058}{verifica\+\_\+preta} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado, int col, int lin)
\item 
int \hyperlink{camada__de__dados_8h_adc98a40a697ff1c913c883b907bc9b89}{pode\+\_\+mover} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado, int col, int lin)
\item 
void \hyperlink{camada__de__dados_8h_a1c048d420c981c6d25777428acb43448}{modifica\+\_\+jogador\+\_\+atual} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado, int contador)
\item 
int \hyperlink{camada__de__dados_8h_a1a7934f5355f2ca33164b8293752cf6e}{get\+\_\+coluna\+\_\+anterior} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado)
\item 
int \hyperlink{camada__de__dados_8h_a32c50b3f634081b92875d9618d1aec9c}{get\+\_\+linha\+\_\+anterior} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado)
\item 
int \hyperlink{camada__de__dados_8h_a84c6048afd16375832682a6149460797}{get\+\_\+coluna} (\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA} coord)
\item 
int \hyperlink{camada__de__dados_8h_a75b3b7a34bef41ea011c00483af81490}{get\+\_\+linha} (\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA} coord)
\item 
int \hyperlink{camada__de__dados_8h_aa58268ae314656b882a324018afe813c}{get\+\_\+jogada} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado)
\item 
int \hyperlink{camada__de__dados_8h_a17a92ae4131164c13acc9e8e2ce134da}{atualiza\+\_\+jogadas} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$estado)
\item 
void \hyperlink{camada__de__dados_8h_a42ebae9f26aa58c0f2dfdbd3838c2240}{set\+\_\+casa} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, int c, int l, C\+A\+SA casa)
\item 
void \hyperlink{camada__de__dados_8h_a52c1dbe8bebf17fb7245b067339f15a7}{armazena\+\_\+jogada} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, \hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA} c)
\item 
void \hyperlink{camada__de__dados_8h_a6a197eba64ba1a081810b849df45b170}{fdisplay\+\_\+jogadas} (F\+I\+LE $\ast$fp, \hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e)
\item 
void \hyperlink{camada__de__dados_8h_a25048b9e45970f84703c6ba286e8402c}{le\+\_\+e\+\_\+escreve\+\_\+jogadas} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, int col, int lin, int n\+\_\+jogada, int jog)
\item 
void \hyperlink{camada__de__dados_8h_a54ce140d981c4c0610846f6f83f3bd84}{put\+\_\+jogada} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, int jogada)
\item 
void \hyperlink{camada__de__dados_8h_a90d936573d336b4e55748f662ad50480}{put\+\_\+jogador\+\_\+atual} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, int jog)
\item 
int \hyperlink{camada__de__dados_8h_a2369b75386a716e63a53ffbbbf0c6528}{jogar\+\_\+pos} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, J\+O\+G\+A\+D\+AS backup, int pos)
\item 
void \hyperlink{camada__de__dados_8h_a011a5fcf9286d6382fbdaf847c8e47df}{array\+\_\+backup} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, J\+O\+G\+A\+D\+AS backup, int pos)
\item 
void \hyperlink{camada__de__dados_8h_aa0414fee0f410f904a623fdd4dcb0fc3}{imprime\+\_\+play} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, int n\+\_\+jogada, int jogador, F\+I\+LE $\ast$fp)
\item 
\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA} $\ast$ \hyperlink{camada__de__dados_8h_af8e1e3112fcc3ea2c118cb5833ebc6bf}{selectcasas} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, \hyperlink{structnodo}{llig} lista, int $\ast$tamanho)
\item 
\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA} $\ast$ \hyperlink{camada__de__dados_8h_ada9feef24d3b13d0e5ed73c6fb10e11c}{devolveindice} (\hyperlink{structnodo}{llig} lista, int indice)
\item 
float \hyperlink{camada__de__dados_8h_aa0fcaf956e4692e4c05e8744bd9b04e5}{distanciacasas} (\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA} $\ast$coord, int jog)
\item 
void \hyperlink{camada__de__dados_8h_aa52af3ec8cf78aef079bdb117cf735c4}{jog\+Euclidiano} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, int $\ast$jog1, int $\ast$jog2)
\item 
\hyperlink{structnodo}{llig} \hyperlink{camada__de__dados_8h_a12475b48973cf7cb04ca92b65aa5301e}{armazena\+\_\+posicoes} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, \hyperlink{structnodo}{llig} lista, int $\ast$tamanho)
\item 
void \hyperlink{camada__de__dados_8h_ab184b82fd763449103d10b56b797c537}{ler} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, char $\ast$filename)
\item 
void \hyperlink{camada__de__dados_8h_a77c3b8a0bfaea37ab083920b6d253537}{gravar} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, char $\ast$filename)
\item 
\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA} $\ast$ \hyperlink{camada__de__dados_8h_ae38a7327a92c590b3d6c53e7891b609f}{aloca\+\_\+coord} (\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA} c)
\item 
void \hyperlink{camada__de__dados_8h_acdfee083b738d1d99592edfcac794b8f}{jog\+Random} (\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$e, int $\ast$jog1, int $\ast$jog2)
\end{DoxyCompactItemize}


\subsection{Descrição detalhada}
Estado e funções que o manipulam 

\subsection{Documentação das funções}
\mbox{\Hypertarget{camada__de__dados_8h_ae38a7327a92c590b3d6c53e7891b609f}\label{camada__de__dados_8h_ae38a7327a92c590b3d6c53e7891b609f}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!aloca\+\_\+coord@{aloca\+\_\+coord}}
\index{aloca\+\_\+coord@{aloca\+\_\+coord}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{aloca\+\_\+coord()}{aloca\_coord()}}
{\footnotesize\ttfamily \hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA}$\ast$ aloca\+\_\+coord (\begin{DoxyParamCaption}\item[{\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA}}]{c }\end{DoxyParamCaption})}

Aloca espaço na memória para uma coordenada e devolve o apontador da nova coordenada \mbox{\Hypertarget{camada__de__dados_8h_a52c1dbe8bebf17fb7245b067339f15a7}\label{camada__de__dados_8h_a52c1dbe8bebf17fb7245b067339f15a7}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!armazena\+\_\+jogada@{armazena\+\_\+jogada}}
\index{armazena\+\_\+jogada@{armazena\+\_\+jogada}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{armazena\+\_\+jogada()}{armazena\_jogada()}}
{\footnotesize\ttfamily void armazena\+\_\+jogada (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA}}]{c }\end{DoxyParamCaption})}

Função que armazena no array jogadas\mbox{[}32\mbox{]} as jogadas à medida em que são feitas \mbox{\Hypertarget{camada__de__dados_8h_a12475b48973cf7cb04ca92b65aa5301e}\label{camada__de__dados_8h_a12475b48973cf7cb04ca92b65aa5301e}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!armazena\+\_\+posicoes@{armazena\+\_\+posicoes}}
\index{armazena\+\_\+posicoes@{armazena\+\_\+posicoes}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{armazena\+\_\+posicoes()}{armazena\_posicoes()}}
{\footnotesize\ttfamily \hyperlink{structnodo}{llig} armazena\+\_\+posicoes (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{\hyperlink{structnodo}{llig}}]{lista,  }\item[{int $\ast$}]{tamanho }\end{DoxyParamCaption})}

Função que aramzena na lista todas as jogadas possíveis que o bot pode fazer no momento \mbox{\Hypertarget{camada__de__dados_8h_a011a5fcf9286d6382fbdaf847c8e47df}\label{camada__de__dados_8h_a011a5fcf9286d6382fbdaf847c8e47df}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!array\+\_\+backup@{array\+\_\+backup}}
\index{array\+\_\+backup@{array\+\_\+backup}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{array\+\_\+backup()}{array\_backup()}}
{\footnotesize\ttfamily void array\+\_\+backup (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{J\+O\+G\+A\+D\+AS}]{backup,  }\item[{int}]{pos }\end{DoxyParamCaption})}

Função que copia as jogadas do array J\+O\+G\+A\+D\+AS\mbox{[}32\mbox{]} para o array backup \mbox{\Hypertarget{camada__de__dados_8h_a17a92ae4131164c13acc9e8e2ce134da}\label{camada__de__dados_8h_a17a92ae4131164c13acc9e8e2ce134da}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!atualiza\+\_\+jogadas@{atualiza\+\_\+jogadas}}
\index{atualiza\+\_\+jogadas@{atualiza\+\_\+jogadas}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{atualiza\+\_\+jogadas()}{atualiza\_jogadas()}}
{\footnotesize\ttfamily int atualiza\+\_\+jogadas (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado }\end{DoxyParamCaption})}

Função que atualiza o número de jogadas através dependendo do jogador atual \mbox{\Hypertarget{camada__de__dados_8h_a6bf7f42979ba1ed2a8046535ff25ccb1}\label{camada__de__dados_8h_a6bf7f42979ba1ed2a8046535ff25ccb1}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!atualiza\+\_\+ultima\+\_\+jogada@{atualiza\+\_\+ultima\+\_\+jogada}}
\index{atualiza\+\_\+ultima\+\_\+jogada@{atualiza\+\_\+ultima\+\_\+jogada}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{atualiza\+\_\+ultima\+\_\+jogada()}{atualiza\_ultima\_jogada()}}
{\footnotesize\ttfamily void atualiza\+\_\+ultima\+\_\+jogada (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado,  }\item[{int}]{col,  }\item[{int}]{lin }\end{DoxyParamCaption})}

Função que coloca uma peça preta nas coordenadas da jogada anterior \mbox{\Hypertarget{camada__de__dados_8h_ada9feef24d3b13d0e5ed73c6fb10e11c}\label{camada__de__dados_8h_ada9feef24d3b13d0e5ed73c6fb10e11c}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!devolveindice@{devolveindice}}
\index{devolveindice@{devolveindice}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{devolveindice()}{devolveindice()}}
{\footnotesize\ttfamily \hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA}$\ast$ devolveindice (\begin{DoxyParamCaption}\item[{\hyperlink{structnodo}{llig}}]{lista,  }\item[{int}]{indice }\end{DoxyParamCaption})}

Função que vai à lista passada no input e devolve o elemento com o respetivo índice \mbox{\Hypertarget{camada__de__dados_8h_aa0fcaf956e4692e4c05e8744bd9b04e5}\label{camada__de__dados_8h_aa0fcaf956e4692e4c05e8744bd9b04e5}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!distanciacasas@{distanciacasas}}
\index{distanciacasas@{distanciacasas}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{distanciacasas()}{distanciacasas()}}
{\footnotesize\ttfamily float distanciacasas (\begin{DoxyParamCaption}\item[{\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA} $\ast$}]{coord,  }\item[{int}]{jog }\end{DoxyParamCaption})}

Função que calcula a distância da posição atual do jogador até ao objetivo \mbox{\Hypertarget{camada__de__dados_8h_a0609098f15b2ec0d7c994f7ea3667455}\label{camada__de__dados_8h_a0609098f15b2ec0d7c994f7ea3667455}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!empty\+\_\+tabuleiro@{empty\+\_\+tabuleiro}}
\index{empty\+\_\+tabuleiro@{empty\+\_\+tabuleiro}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{empty\+\_\+tabuleiro()}{empty\_tabuleiro()}}
{\footnotesize\ttfamily void empty\+\_\+tabuleiro (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e }\end{DoxyParamCaption})}

Função que esvazia o tabuleiro \mbox{\Hypertarget{camada__de__dados_8h_a6a197eba64ba1a081810b849df45b170}\label{camada__de__dados_8h_a6a197eba64ba1a081810b849df45b170}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!fdisplay\+\_\+jogadas@{fdisplay\+\_\+jogadas}}
\index{fdisplay\+\_\+jogadas@{fdisplay\+\_\+jogadas}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{fdisplay\+\_\+jogadas()}{fdisplay\_jogadas()}}
{\footnotesize\ttfamily void fdisplay\+\_\+jogadas (\begin{DoxyParamCaption}\item[{F\+I\+LE $\ast$}]{fp,  }\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e }\end{DoxyParamCaption})}

Função que armazena no array jogadas\mbox{[}32\mbox{]} as jogadas à medida em que são feitas

Função que imprime as jogadas efetuadas até aquela etapa do jogo, com os repetivos números das jogadas \mbox{\Hypertarget{camada__de__dados_8h_a84c6048afd16375832682a6149460797}\label{camada__de__dados_8h_a84c6048afd16375832682a6149460797}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!get\+\_\+coluna@{get\+\_\+coluna}}
\index{get\+\_\+coluna@{get\+\_\+coluna}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{get\+\_\+coluna()}{get\_coluna()}}
{\footnotesize\ttfamily int get\+\_\+coluna (\begin{DoxyParamCaption}\item[{\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA}}]{coord }\end{DoxyParamCaption})}

Função que obtem a coluna da coordenada dada \mbox{\Hypertarget{camada__de__dados_8h_a1a7934f5355f2ca33164b8293752cf6e}\label{camada__de__dados_8h_a1a7934f5355f2ca33164b8293752cf6e}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!get\+\_\+coluna\+\_\+anterior@{get\+\_\+coluna\+\_\+anterior}}
\index{get\+\_\+coluna\+\_\+anterior@{get\+\_\+coluna\+\_\+anterior}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{get\+\_\+coluna\+\_\+anterior()}{get\_coluna\_anterior()}}
{\footnotesize\ttfamily int get\+\_\+coluna\+\_\+anterior (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado }\end{DoxyParamCaption})}

Função que obtem a coluna anterior através do estado \mbox{\Hypertarget{camada__de__dados_8h_aa58268ae314656b882a324018afe813c}\label{camada__de__dados_8h_aa58268ae314656b882a324018afe813c}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!get\+\_\+jogada@{get\+\_\+jogada}}
\index{get\+\_\+jogada@{get\+\_\+jogada}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{get\+\_\+jogada()}{get\_jogada()}}
{\footnotesize\ttfamily int get\+\_\+jogada (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado }\end{DoxyParamCaption})}

Função que obtem a jogada \mbox{\Hypertarget{camada__de__dados_8h_a75b3b7a34bef41ea011c00483af81490}\label{camada__de__dados_8h_a75b3b7a34bef41ea011c00483af81490}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!get\+\_\+linha@{get\+\_\+linha}}
\index{get\+\_\+linha@{get\+\_\+linha}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{get\+\_\+linha()}{get\_linha()}}
{\footnotesize\ttfamily int get\+\_\+linha (\begin{DoxyParamCaption}\item[{\hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA}}]{coord }\end{DoxyParamCaption})}

Função que obtem a linha da coordenada dada \mbox{\Hypertarget{camada__de__dados_8h_a32c50b3f634081b92875d9618d1aec9c}\label{camada__de__dados_8h_a32c50b3f634081b92875d9618d1aec9c}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!get\+\_\+linha\+\_\+anterior@{get\+\_\+linha\+\_\+anterior}}
\index{get\+\_\+linha\+\_\+anterior@{get\+\_\+linha\+\_\+anterior}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{get\+\_\+linha\+\_\+anterior()}{get\_linha\_anterior()}}
{\footnotesize\ttfamily int get\+\_\+linha\+\_\+anterior (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado }\end{DoxyParamCaption})}

Função que obtem a linha anterior através do estado \mbox{\Hypertarget{camada__de__dados_8h_a77c3b8a0bfaea37ab083920b6d253537}\label{camada__de__dados_8h_a77c3b8a0bfaea37ab083920b6d253537}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!gravar@{gravar}}
\index{gravar@{gravar}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{gravar()}{gravar()}}
{\footnotesize\ttfamily void gravar (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{char $\ast$}]{filename }\end{DoxyParamCaption})}

Grava o estado do jogo num ficheiro \mbox{\Hypertarget{camada__de__dados_8h_aa0414fee0f410f904a623fdd4dcb0fc3}\label{camada__de__dados_8h_aa0414fee0f410f904a623fdd4dcb0fc3}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!imprime\+\_\+play@{imprime\+\_\+play}}
\index{imprime\+\_\+play@{imprime\+\_\+play}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{imprime\+\_\+play()}{imprime\_play()}}
{\footnotesize\ttfamily void imprime\+\_\+play (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{int}]{n\+\_\+jogada,  }\item[{int}]{jogador,  }\item[{F\+I\+LE $\ast$}]{fp }\end{DoxyParamCaption})}

Função que imprime somente as jogadas no file pointer passado no input \mbox{\Hypertarget{camada__de__dados_8h_a7e0c7e26fb685d9ab501e19b05e6954f}\label{camada__de__dados_8h_a7e0c7e26fb685d9ab501e19b05e6954f}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!inicializar\+\_\+estado@{inicializar\+\_\+estado}}
\index{inicializar\+\_\+estado@{inicializar\+\_\+estado}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{inicializar\+\_\+estado()}{inicializar\_estado()}}
{\footnotesize\ttfamily \hyperlink{structESTADO}{E\+S\+T\+A\+DO}$\ast$ inicializar\+\_\+estado (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Função que inicializa o estado do jogo \mbox{\Hypertarget{camada__de__dados_8h_abac41dceaa2551d1def3f4fbb06b0758}\label{camada__de__dados_8h_abac41dceaa2551d1def3f4fbb06b0758}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!is\+\_\+near\+\_\+branca@{is\+\_\+near\+\_\+branca}}
\index{is\+\_\+near\+\_\+branca@{is\+\_\+near\+\_\+branca}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{is\+\_\+near\+\_\+branca()}{is\_near\_branca()}}
{\footnotesize\ttfamily int is\+\_\+near\+\_\+branca (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado,  }\item[{int}]{colatual,  }\item[{int}]{linatual }\end{DoxyParamCaption})}

Função booleana que verifica se a peça dada no input está numa posição de jogada válida \mbox{\Hypertarget{camada__de__dados_8h_a2369b75386a716e63a53ffbbbf0c6528}\label{camada__de__dados_8h_a2369b75386a716e63a53ffbbbf0c6528}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!jogar\+\_\+pos@{jogar\+\_\+pos}}
\index{jogar\+\_\+pos@{jogar\+\_\+pos}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{jogar\+\_\+pos()}{jogar\_pos()}}
{\footnotesize\ttfamily int jogar\+\_\+pos (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{J\+O\+G\+A\+D\+AS}]{backup,  }\item[{int}]{pos }\end{DoxyParamCaption})}

Função que efetua todas as jogadas existentes no array backup \mbox{\Hypertarget{camada__de__dados_8h_aa52af3ec8cf78aef079bdb117cf735c4}\label{camada__de__dados_8h_aa52af3ec8cf78aef079bdb117cf735c4}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!jog\+Euclidiano@{jog\+Euclidiano}}
\index{jog\+Euclidiano@{jog\+Euclidiano}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{jog\+Euclidiano()}{jogEuclidiano()}}
{\footnotesize\ttfamily void jog\+Euclidiano (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{int $\ast$}]{jog1,  }\item[{int $\ast$}]{jog2 }\end{DoxyParamCaption})}

Função que faz com o que bot efetue uma jogada segundo a sua estratégia \mbox{\Hypertarget{camada__de__dados_8h_acdfee083b738d1d99592edfcac794b8f}\label{camada__de__dados_8h_acdfee083b738d1d99592edfcac794b8f}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!jog\+Random@{jog\+Random}}
\index{jog\+Random@{jog\+Random}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{jog\+Random()}{jogRandom()}}
{\footnotesize\ttfamily void jog\+Random (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{int $\ast$}]{jog1,  }\item[{int $\ast$}]{jog2 }\end{DoxyParamCaption})}

Implementação da segunda heurística \mbox{\Hypertarget{camada__de__dados_8h_a25048b9e45970f84703c6ba286e8402c}\label{camada__de__dados_8h_a25048b9e45970f84703c6ba286e8402c}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!le\+\_\+e\+\_\+escreve\+\_\+jogadas@{le\+\_\+e\+\_\+escreve\+\_\+jogadas}}
\index{le\+\_\+e\+\_\+escreve\+\_\+jogadas@{le\+\_\+e\+\_\+escreve\+\_\+jogadas}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{le\+\_\+e\+\_\+escreve\+\_\+jogadas()}{le\_e\_escreve\_jogadas()}}
{\footnotesize\ttfamily void le\+\_\+e\+\_\+escreve\+\_\+jogadas (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{int}]{col,  }\item[{int}]{lin,  }\item[{int}]{n\+\_\+jogada,  }\item[{int}]{jog }\end{DoxyParamCaption})}

Função que recebe uma coluna e uma linha e atualiza o array jogadas \mbox{\Hypertarget{camada__de__dados_8h_ab184b82fd763449103d10b56b797c537}\label{camada__de__dados_8h_ab184b82fd763449103d10b56b797c537}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!ler@{ler}}
\index{ler@{ler}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{ler()}{ler()}}
{\footnotesize\ttfamily void ler (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{char $\ast$}]{filename }\end{DoxyParamCaption})}

Le o estado a partir de um ficheiro \mbox{\Hypertarget{camada__de__dados_8h_a1c048d420c981c6d25777428acb43448}\label{camada__de__dados_8h_a1c048d420c981c6d25777428acb43448}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!modifica\+\_\+jogador\+\_\+atual@{modifica\+\_\+jogador\+\_\+atual}}
\index{modifica\+\_\+jogador\+\_\+atual@{modifica\+\_\+jogador\+\_\+atual}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{modifica\+\_\+jogador\+\_\+atual()}{modifica\_jogador\_atual()}}
{\footnotesize\ttfamily void modifica\+\_\+jogador\+\_\+atual (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado,  }\item[{int}]{contador }\end{DoxyParamCaption})}

Função que modifica o jogador atual \mbox{\Hypertarget{camada__de__dados_8h_af07a315536e57ea96b16c3e232e9eb54}\label{camada__de__dados_8h_af07a315536e57ea96b16c3e232e9eb54}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!obter\+\_\+estado\+\_\+casa@{obter\+\_\+estado\+\_\+casa}}
\index{obter\+\_\+estado\+\_\+casa@{obter\+\_\+estado\+\_\+casa}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{obter\+\_\+estado\+\_\+casa()}{obter\_estado\_casa()}}
{\footnotesize\ttfamily C\+A\+SA obter\+\_\+estado\+\_\+casa (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{int}]{c,  }\item[{int}]{l }\end{DoxyParamCaption})}

Função que obtem a casa de uma certa posição \mbox{\Hypertarget{camada__de__dados_8h_ad6e326e4ffa57ca1ae0c75377ecefc8c}\label{camada__de__dados_8h_ad6e326e4ffa57ca1ae0c75377ecefc8c}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!obter\+\_\+jogador\+\_\+atual@{obter\+\_\+jogador\+\_\+atual}}
\index{obter\+\_\+jogador\+\_\+atual@{obter\+\_\+jogador\+\_\+atual}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{obter\+\_\+jogador\+\_\+atual()}{obter\_jogador\_atual()}}
{\footnotesize\ttfamily int obter\+\_\+jogador\+\_\+atual (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado }\end{DoxyParamCaption})}

Função Função que devolve o jogador atual \mbox{\Hypertarget{camada__de__dados_8h_adc98a40a697ff1c913c883b907bc9b89}\label{camada__de__dados_8h_adc98a40a697ff1c913c883b907bc9b89}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!pode\+\_\+mover@{pode\+\_\+mover}}
\index{pode\+\_\+mover@{pode\+\_\+mover}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{pode\+\_\+mover()}{pode\_mover()}}
{\footnotesize\ttfamily int pode\+\_\+mover (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado,  }\item[{int}]{col,  }\item[{int}]{lin }\end{DoxyParamCaption})}

Função que determina se o jogador se pode mover tendo em conta todos os possíveis obstáculos como os cantos do tabuleiro e a existencia de peças pretas no caminho \mbox{\Hypertarget{camada__de__dados_8h_a55106112fc732be07081af171cd0ee29}\label{camada__de__dados_8h_a55106112fc732be07081af171cd0ee29}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!put\+\_\+branca@{put\+\_\+branca}}
\index{put\+\_\+branca@{put\+\_\+branca}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{put\+\_\+branca()}{put\_branca()}}
{\footnotesize\ttfamily void put\+\_\+branca (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado,  }\item[{int}]{col,  }\item[{int}]{lin }\end{DoxyParamCaption})}

Função que coloca a peça branca nas coordenadas do input \mbox{\Hypertarget{camada__de__dados_8h_a54ce140d981c4c0610846f6f83f3bd84}\label{camada__de__dados_8h_a54ce140d981c4c0610846f6f83f3bd84}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!put\+\_\+jogada@{put\+\_\+jogada}}
\index{put\+\_\+jogada@{put\+\_\+jogada}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{put\+\_\+jogada()}{put\_jogada()}}
{\footnotesize\ttfamily void put\+\_\+jogada (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{int}]{jogada }\end{DoxyParamCaption})}

Função que vai ao estado e introduz o número de jogadas passado no input \mbox{\Hypertarget{camada__de__dados_8h_a90d936573d336b4e55748f662ad50480}\label{camada__de__dados_8h_a90d936573d336b4e55748f662ad50480}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!put\+\_\+jogador\+\_\+atual@{put\+\_\+jogador\+\_\+atual}}
\index{put\+\_\+jogador\+\_\+atual@{put\+\_\+jogador\+\_\+atual}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{put\+\_\+jogador\+\_\+atual()}{put\_jogador\_atual()}}
{\footnotesize\ttfamily void put\+\_\+jogador\+\_\+atual (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{int}]{jog }\end{DoxyParamCaption})}

Função muda o jogador atual \mbox{\Hypertarget{camada__de__dados_8h_aad79e0ccf12ac3d67684bde2f2e4ed40}\label{camada__de__dados_8h_aad79e0ccf12ac3d67684bde2f2e4ed40}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!put\+\_\+preta@{put\+\_\+preta}}
\index{put\+\_\+preta@{put\+\_\+preta}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{put\+\_\+preta()}{put\_preta()}}
{\footnotesize\ttfamily void put\+\_\+preta (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado }\end{DoxyParamCaption})}

Função que coloca uma peça preta na posição que lhe é dada \mbox{\Hypertarget{camada__de__dados_8h_af8e1e3112fcc3ea2c118cb5833ebc6bf}\label{camada__de__dados_8h_af8e1e3112fcc3ea2c118cb5833ebc6bf}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!selectcasas@{selectcasas}}
\index{selectcasas@{selectcasas}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{selectcasas()}{selectcasas()}}
{\footnotesize\ttfamily \hyperlink{structCOORDENADA}{C\+O\+O\+R\+D\+E\+N\+A\+DA}$\ast$ selectcasas (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{\hyperlink{structnodo}{llig}}]{lista,  }\item[{int $\ast$}]{tamanho }\end{DoxyParamCaption})}

Função que copia os elemntos da lista ligada para um array, para que possa ser percorrido e determinado a coordenada da jogada que o bot irá efetuar \mbox{\Hypertarget{camada__de__dados_8h_a42ebae9f26aa58c0f2dfdbd3838c2240}\label{camada__de__dados_8h_a42ebae9f26aa58c0f2dfdbd3838c2240}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!set\+\_\+casa@{set\+\_\+casa}}
\index{set\+\_\+casa@{set\+\_\+casa}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{set\+\_\+casa()}{set\_casa()}}
{\footnotesize\ttfamily void set\+\_\+casa (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{e,  }\item[{int}]{c,  }\item[{int}]{l,  }\item[{C\+A\+SA}]{casa }\end{DoxyParamCaption})}

Função que analiza o tabuleiro imprimido e adiciona a informação que recebe sobre as peças \mbox{\Hypertarget{camada__de__dados_8h_a1f4df241c1ad82e53a8a13cd6fcb9058}\label{camada__de__dados_8h_a1f4df241c1ad82e53a8a13cd6fcb9058}} 
\index{camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}!verifica\+\_\+preta@{verifica\+\_\+preta}}
\index{verifica\+\_\+preta@{verifica\+\_\+preta}!camada\+\_\+de\+\_\+dados.\+h@{camada\+\_\+de\+\_\+dados.\+h}}
\subsubsection{\texorpdfstring{verifica\+\_\+preta()}{verifica\_preta()}}
{\footnotesize\ttfamily int verifica\+\_\+preta (\begin{DoxyParamCaption}\item[{\hyperlink{structESTADO}{E\+S\+T\+A\+DO} $\ast$}]{estado,  }\item[{int}]{col,  }\item[{int}]{lin }\end{DoxyParamCaption})}

Função que atualiza a ultima jogada para a jogada que acabou de ser feita 