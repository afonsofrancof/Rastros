<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="camada__de__dados_8c" kind="file" language="C++">
    <compoundname>camada_de_dados.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="listas_8h" local="yes">listas.h</includes>
    <includes refid="camada__de__dados_8h" local="yes">camada_de_dados.h</includes>
    <includes refid="logica_8h" local="yes">logica.h</includes>
    <includes refid="interface_8h" local="yes">interface.h</includes>
    <incdepgraph>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>listas.h</label>
        <link refid="listas_8h"/>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="7">
        <label>logica.h</label>
        <link refid="logica_8h"/>
      </node>
      <node id="0">
        <label>camada_de_dados.c</label>
        <link refid="camada__de__dados_8c"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>camada_de_dados.h</label>
        <link refid="camada__de__dados_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>interface.h</label>
        <link refid="interface_8h"/>
      </node>
      <node id="1">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="camada__de__dados_8c_1a6821bafc3c88dfb2e433a095df9940c6" prot="public" static="no">
        <name>BUF_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="10" column="9" bodyfile="camada_de_dados.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="camada__de__dados_8c_1a7e0c7e26fb685d9ab501e19b05e6954f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
        <definition>ESTADO* inicializar_estado</definition>
        <argsstring>()</argsstring>
        <name>inicializar_estado</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que inicializa o estado do jogo </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="12" column="1" bodyfile="camada_de_dados.c" bodystart="12" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a0609098f15b2ec0d7c994f7ea3667455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty_tabuleiro</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>empty_tabuleiro</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que esvazia o tabuleiro </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="30" column="1" bodyfile="camada_de_dados.c" bodystart="30" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1ad6e326e4ffa57ca1ae0c75377ecefc8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_jogador_atual</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>obter_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função Função que devolve o jogador atual </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="43" column="1" bodyfile="camada_de_dados.c" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a0c4c9bb2cf37c38e75824bd2a8f8d6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CASA</type>
        <definition>CASA obter_estado_casa</definition>
        <argsstring>(ESTADO *estado, int c, int l)</argsstring>
        <name>obter_estado_casa</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
          <defname>estado</defname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a casa de uma certa posição </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="52" column="1" bodyfile="camada_de_dados.c" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1abac41dceaa2551d1def3f4fbb06b0758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_near_branca</definition>
        <argsstring>(ESTADO *estado, int colatual, int linatual)</argsstring>
        <name>is_near_branca</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colatual</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linatual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função booleana que verifica se a peça dada no input está numa posição de jogada válida </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="61" column="1" bodyfile="camada_de_dados.c" bodystart="61" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a55106112fc732be07081af171cd0ee29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_branca</definition>
        <argsstring>(ESTADO *estado, int col, int lin)</argsstring>
        <name>put_branca</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que coloca a peça branca nas coordenadas do input </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="75" column="1" bodyfile="camada_de_dados.c" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1aad79e0ccf12ac3d67684bde2f2e4ed40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_preta</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>put_preta</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que coloca uma peça preta na posição que lhe é dada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="82" column="1" bodyfile="camada_de_dados.c" bodystart="82" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a6bf7f42979ba1ed2a8046535ff25ccb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atualiza_ultima_jogada</definition>
        <argsstring>(ESTADO *estado, int col, int lin)</argsstring>
        <name>atualiza_ultima_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que coloca uma peça preta nas coordenadas da jogada anterior </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="92" column="1" bodyfile="camada_de_dados.c" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a1f4df241c1ad82e53a8a13cd6fcb9058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verifica_preta</definition>
        <argsstring>(ESTADO *estado, int col, int lin)</argsstring>
        <name>verifica_preta</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que atualiza a ultima jogada para a jogada que acabou de ser feita </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="100" column="1" bodyfile="camada_de_dados.c" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1adc98a40a697ff1c913c883b907bc9b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pode_mover</definition>
        <argsstring>(ESTADO *estado, int col, int lin)</argsstring>
        <name>pode_mover</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que determina se o jogador se pode mover tendo em conta todos os possíveis obstáculos como os cantos do tabuleiro e a existencia de peças pretas no caminho </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="110" column="1" bodyfile="camada_de_dados.c" bodystart="110" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a1c048d420c981c6d25777428acb43448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modifica_jogador_atual</definition>
        <argsstring>(ESTADO *estado, int contador)</argsstring>
        <name>modifica_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contador</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que modifica o jogador atual </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="139" column="1" bodyfile="camada_de_dados.c" bodystart="139" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a1a7934f5355f2ca33164b8293752cf6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_coluna_anterior</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>get_coluna_anterior</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a coluna anterior através do estado </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="154" column="1" bodyfile="camada_de_dados.c" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a32c50b3f634081b92875d9618d1aec9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_linha_anterior</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>get_linha_anterior</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a linha anterior através do estado </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="163" column="1" bodyfile="camada_de_dados.c" bodystart="163" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a84c6048afd16375832682a6149460797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_coluna</definition>
        <argsstring>(COORDENADA coord)</argsstring>
        <name>get_coluna</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a coluna da coordenada dada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="172" column="1" bodyfile="camada_de_dados.c" bodystart="172" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a75b3b7a34bef41ea011c00483af81490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_linha</definition>
        <argsstring>(COORDENADA coord)</argsstring>
        <name>get_linha</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a linha da coordenada dada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="181" column="1" bodyfile="camada_de_dados.c" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1aa58268ae314656b882a324018afe813c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_jogada</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>get_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a jogada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="190" column="1" bodyfile="camada_de_dados.c" bodystart="190" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a17a92ae4131164c13acc9e8e2ce134da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int atualiza_jogadas</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>atualiza_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que atualiza o número de jogadas através dependendo do jogador atual </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="199" column="1" bodyfile="camada_de_dados.c" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a42ebae9f26aa58c0f2dfdbd3838c2240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_casa</definition>
        <argsstring>(ESTADO *e, int c, int l, CASA casa)</argsstring>
        <name>set_casa</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>CASA</type>
          <declname>casa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que analiza o tabuleiro imprimido e adiciona a informação que recebe sobre as peças </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="209" column="1" bodyfile="camada_de_dados.c" bodystart="209" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a52c1dbe8bebf17fb7245b067339f15a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void armazena_jogada</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>armazena_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que armazena no array jogadas[32] as jogadas à medida em que são feitas </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="249" column="1" bodyfile="camada_de_dados.c" bodystart="249" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1aefa7f645f2fc27bad798ebd6db680be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_string</definition>
        <argsstring>(char *string)</argsstring>
        <name>print_string</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="260" column="1" bodyfile="camada_de_dados.c" bodystart="260" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a6a197eba64ba1a081810b849df45b170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fdisplay_jogadas</definition>
        <argsstring>(FILE *fp, ESTADO *e)</argsstring>
        <name>fdisplay_jogadas</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que imprime as jogadas efetuadas até aquela etapa do jogo, com os repetivos números das jogadas </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="271" column="1" bodyfile="camada_de_dados.c" bodystart="271" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a25048b9e45970f84703c6ba286e8402c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void le_e_escreve_jogadas</definition>
        <argsstring>(ESTADO *e, int col, int lin, int n_jogada, int jog)</argsstring>
        <name>le_e_escreve_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_jogada</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que recebe uma coluna e uma linha e atualiza o array jogadas </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="292" column="1" bodyfile="camada_de_dados.c" bodystart="292" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a54ce140d981c4c0610846f6f83f3bd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_jogada</definition>
        <argsstring>(ESTADO *e, int jogada)</argsstring>
        <name>put_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogada</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que vai ao estado e introduz o número de jogadas passado no input </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="308" column="1" bodyfile="camada_de_dados.c" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a90d936573d336b4e55748f662ad50480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_jogador_atual</definition>
        <argsstring>(ESTADO *e, int jog)</argsstring>
        <name>put_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função muda o jogador atual </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="315" column="1" bodyfile="camada_de_dados.c" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a2369b75386a716e63a53ffbbbf0c6528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogar_pos</definition>
        <argsstring>(ESTADO *e, JOGADAS backup, int pos)</argsstring>
        <name>jogar_pos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>JOGADAS</type>
          <declname>backup</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que efetua todas as jogadas existentes no array backup </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="322" column="1" bodyfile="camada_de_dados.c" bodystart="322" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a011a5fcf9286d6382fbdaf847c8e47df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void array_backup</definition>
        <argsstring>(ESTADO *e, JOGADAS backup, int pos)</argsstring>
        <name>array_backup</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>JOGADAS</type>
          <declname>backup</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que copia as jogadas do array JOGADAS[32] para o array backup </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="339" column="1" bodyfile="camada_de_dados.c" bodystart="339" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1aa0414fee0f410f904a623fdd4dcb0fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void imprime_play</definition>
        <argsstring>(ESTADO *e, int n_jogada, int jogador, FILE *fp)</argsstring>
        <name>imprime_play</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_jogada</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que imprime somente as jogadas no file pointer passado no input </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="348" column="1" bodyfile="camada_de_dados.c" bodystart="348" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1af8e1e3112fcc3ea2c118cb5833ebc6bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref> *</type>
        <definition>COORDENADA* selectcasas</definition>
        <argsstring>(ESTADO *e, llig lista, int *tamanho)</argsstring>
        <name>selectcasas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>lista</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>tamanho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que copia os elemntos da lista ligada para um array, para que possa ser percorrido e determinado a coordenada da jogada que o bot irá efetuar </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="368" column="1" bodyfile="camada_de_dados.c" bodystart="368" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1aa52af3ec8cf78aef079bdb117cf735c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jogEuclidiano</definition>
        <argsstring>(ESTADO *e, int *jog1, int *jog2)</argsstring>
        <name>jogEuclidiano</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jog1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jog2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que faz com o que bot efetue uma jogada segundo a sua estratégia </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="389" column="1" bodyfile="camada_de_dados.c" bodystart="389" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1ada9feef24d3b13d0e5ed73c6fb10e11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref> *</type>
        <definition>COORDENADA* devolveindice</definition>
        <argsstring>(llig lista, int indice)</argsstring>
        <name>devolveindice</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>lista</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que vai à lista passada no input e devolve o elemento com o respetivo índice </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="401" column="1" bodyfile="camada_de_dados.c" bodystart="401" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1aa0fcaf956e4692e4c05e8744bd9b04e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float distanciacasas</definition>
        <argsstring>(COORDENADA *coord, int jog)</argsstring>
        <name>distanciacasas</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref> *</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que calcula a distância da posição atual do jogador até ao objetivo </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="415" column="1" bodyfile="camada_de_dados.c" bodystart="415" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a12475b48973cf7cb04ca92b65aa5301e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnodo" kindref="compound">llig</ref></type>
        <definition>llig armazena_posicoes</definition>
        <argsstring>(ESTADO *e, llig lista, int *tamanho)</argsstring>
        <name>armazena_posicoes</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>lista</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>tamanho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que aramzena na lista todas as jogadas possíveis que o bot pode fazer no momento </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="437" column="1" bodyfile="camada_de_dados.c" bodystart="437" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1ab184b82fd763449103d10b56b797c537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ler</definition>
        <argsstring>(ESTADO *e, char *filename)</argsstring>
        <name>ler</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Le o estado a partir de um ficheiro </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="502" column="1" bodyfile="camada_de_dados.c" bodystart="502" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1a77c3b8a0bfaea37ab083920b6d253537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gravar</definition>
        <argsstring>(ESTADO *e, char *filename)</argsstring>
        <name>gravar</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Grava o estado do jogo num ficheiro </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="537" column="1" bodyfile="camada_de_dados.c" bodystart="537" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1acdfee083b738d1d99592edfcac794b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jogRandom</definition>
        <argsstring>(ESTADO *e, int *jog1, int *jog2)</argsstring>
        <name>jogRandom</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jog1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jog2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implementação da segunda heurística </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="547" column="1" bodyfile="camada_de_dados.c" bodystart="547" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8c_1ae38a7327a92c590b3d6c53e7891b609f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref> *</type>
        <definition>COORDENADA* aloca_coord</definition>
        <argsstring>(COORDENADA c)</argsstring>
        <name>aloca_coord</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Aloca espaço na memória para uma coordenada e devolve o apontador da nova coordenada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.c" line="560" column="1" bodyfile="camada_de_dados.c" bodystart="560" bodyend="565"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="listas_8h" kindref="compound">listas.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="camada__de__dados_8h" kindref="compound">camada_de_dados.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logica_8h" kindref="compound">logica.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interface_8h" kindref="compound">interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUF_SIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<ref refid="camada__de__dados_8h_1a7e0c7e26fb685d9ab501e19b05e6954f" kindref="member">inicializar_estado</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e<sp/>=<sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structESTADO" kindref="compound">ESTADO</ref>));</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;jogador_atual<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;jogada<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>7;<sp/>l<sp/>&gt;=<sp/>0;<sp/>l--)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;=<sp/>7;<sp/>c++)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;tab[c][l]<sp/>=<sp/>VAZIO;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;tab[4][4]<sp/>=<sp/>BRANCA;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;ultima_jogada.linha<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;ultima_jogada.coluna<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>esvazia<sp/>o<sp/>tabuleiro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a0609098f15b2ec0d7c994f7ea3667455" kindref="member">empty_tabuleiro</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>7;<sp/>l<sp/>&gt;=<sp/>0;<sp/>l--)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;=<sp/>7;<sp/>c++)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;tab[c][l]<sp/>=<sp/>VAZIO;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>obtem<sp/>o<sp/>jogador<sp/>atual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" kindref="member">obter_jogador_atual</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>estado-&gt;jogador_atual;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>obtem<sp/>a<sp/>casa<sp/>de<sp/>uma<sp/>certa<sp/>posição</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">CASA<sp/><ref refid="camada__de__dados_8h_1af07a315536e57ea96b16c3e232e9eb54" kindref="member">obter_estado_casa</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>casa;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>casa<sp/>=<sp/>estado-&gt;tab[c][l];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>casa;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>verifica<sp/>se<sp/>as<sp/>coordenadas<sp/>introduzidas<sp/>estão<sp/>a<sp/>uma<sp/>certa<sp/>distância<sp/>da<sp/>peça<sp/>branca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1abac41dceaa2551d1def3f4fbb06b0758" kindref="member">is_near_branca</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colatual,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linatual)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/>lin,<sp/>ans;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>col<sp/>=<sp/>estado-&gt;ultima_jogada.coluna;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>lin<sp/>=<sp/>estado-&gt;ultima_jogada.linha;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((abs(colatual<sp/>-<sp/>col)<sp/>&lt;=<sp/>1)<sp/>&amp;&amp;<sp/>(abs(linatual<sp/>-<sp/>lin)<sp/>&lt;=<sp/>1))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ans;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>coloca<sp/>a<sp/>peça<sp/>branca<sp/>nas<sp/>coordenadas<sp/>do<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a55106112fc732be07081af171cd0ee29" kindref="member">put_branca</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>estado-&gt;tab[col][lin]<sp/>=<sp/>BRANCA;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>coloca<sp/>uma<sp/>peça<sp/>preta<sp/>nas<sp/>coordenadas<sp/>da<sp/>jogada<sp/>anterior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aad79e0ccf12ac3d67684bde2f2e4ed40" kindref="member">put_preta</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/>lin;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>col<sp/>=<sp/>estado-&gt;ultima_jogada.coluna;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>lin<sp/>=<sp/>estado-&gt;ultima_jogada.linha;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>estado-&gt;tab[col][lin]<sp/>=<sp/>PRETA;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>atualiza<sp/>a<sp/>ultima<sp/>jogada<sp/>para<sp/>a<sp/>jogada<sp/>que<sp/>acabou<sp/>de<sp/>ser<sp/>feita</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a6bf7f42979ba1ed2a8046535ff25ccb1" kindref="member">atualiza_ultima_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>estado-&gt;ultima_jogada.coluna<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>estado-&gt;ultima_jogada.linha<sp/>=<sp/>lin;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>verifica<sp/>se<sp/>a<sp/>peça<sp/>nas<sp/>coordenadas<sp/>passadas<sp/>no<sp/>input<sp/>é<sp/>preta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(estado-&gt;tab[col][lin]<sp/>==<sp/>PRETA)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ans;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>determina<sp/>se<sp/>o<sp/>jogador<sp/>se<sp/>pode<sp/>mover<sp/>tendo<sp/>em<sp/>conta<sp/>todos<sp/>os<sp/>possíveis<sp/>obstáculos<sp/>como<sp/>os<sp/>cantos<sp/>do<sp/>tabuleiro<sp/>e<sp/>a<sp/>existencia<sp/>de<sp/>peças<sp/>pretas<sp/>no<sp/>caminho.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1adc98a40a697ff1c913c883b907bc9b89" kindref="member">pode_mover</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ans<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>lin<sp/>==<sp/>7)<sp/></highlight><highlight class="comment">//<sp/>canto<sp/>superior<sp/>esquerdo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin<sp/>-<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col,<sp/>lin<sp/>-<sp/>1)))</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>lin<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>canto<sp/>inferior<sp/>direito</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col,<sp/>lin<sp/>+<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin<sp/>+<sp/>1)))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lin<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>col<sp/>!=<sp/>7<sp/>&amp;&amp;<sp/>col<sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>linha<sp/>de<sp/>cima<sp/>sem<sp/>os<sp/>2<sp/>cantos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col,<sp/>lin<sp/>-<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin<sp/>-<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin<sp/>-<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin)))</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>lin<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>lin<sp/>!=<sp/>7)<sp/></highlight><highlight class="comment">//<sp/>coluna<sp/>da<sp/>esquerda<sp/>sem<sp/>os<sp/>2<sp/>cantos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col,<sp/>lin<sp/>-<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col,<sp/>lin<sp/>+<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin<sp/>-<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin<sp/>+<sp/>1)))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lin<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>col<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>col<sp/>!=<sp/>7)<sp/></highlight><highlight class="comment">//<sp/>linha<sp/>de<sp/>baixo<sp/>sem<sp/>os<sp/>2<sp/>cantos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col,<sp/>lin<sp/>+<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin<sp/>+<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin<sp/>+<sp/>1)))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lin<sp/>!=<sp/>7<sp/>&amp;&amp;<sp/>lin<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>col<sp/>==<sp/>7)<sp/></highlight><highlight class="comment">//<sp/>coluna<sp/>da<sp/>direita<sp/>sem<sp/>os<sp/>2<sp/>cantos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col,<sp/>lin<sp/>+<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col,<sp/>lin<sp/>-<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin<sp/>-<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin<sp/>+<sp/>1)))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ans)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col,<sp/>lin<sp/>+<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col,<sp/>lin<sp/>-<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin<sp/>+<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin<sp/>+<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>+<sp/>1,<sp/>lin<sp/>-<sp/>1))<sp/>&amp;&amp;<sp/>(<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(estado,<sp/>col<sp/>-<sp/>1,<sp/>lin<sp/>-<sp/>1)))</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ans;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>modifica<sp/>o<sp/>jogador<sp/>atual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a1c048d420c981c6d25777428acb43448" kindref="member">modifica_jogador_atual</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contador)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contador<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>estado-&gt;jogador_atual<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contador<sp/>%<sp/>2<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>estado-&gt;jogador_atual<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>estado-&gt;jogador_atual<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>obtem<sp/>a<sp/>coluna<sp/>anterior<sp/>através<sp/>do<sp/>estado</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a1a7934f5355f2ca33164b8293752cf6e" kindref="member">get_coluna_anterior</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>estado-&gt;ultima_jogada.coluna;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>obtem<sp/>a<sp/>linha<sp/>anterior<sp/>através<sp/>do<sp/>estado</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a32c50b3f634081b92875d9618d1aec9c" kindref="member">get_linha_anterior</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>estado-&gt;ultima_jogada.linha;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>obtem<sp/>a<sp/>coluna</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a84c6048afd16375832682a6149460797" kindref="member">get_coluna</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>coord.coluna;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>obtem<sp/>a<sp/>linha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a75b3b7a34bef41ea011c00483af81490" kindref="member">get_linha</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>coord.linha;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>obtem<sp/>a<sp/>jogada</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aa58268ae314656b882a324018afe813c" kindref="member">get_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>estado-&gt;jogada;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>atualiza<sp/>o<sp/>número<sp/>de<sp/>jogadas<sp/>através<sp/>dependendo<sp/>do<sp/>jogador<sp/>atual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a17a92ae4131164c13acc9e8e2ce134da" kindref="member">atualiza_jogadas</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>estado-&gt;jogador_atual;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>estado-&gt;jogada++;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aa58268ae314656b882a324018afe813c" kindref="member">get_jogada</ref>(estado);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>analiza<sp/>o<sp/>tabuleiro<sp/>imprimido<sp/>e<sp/>adiciona<sp/>a<sp/>informação<sp/>que<sp/>recebe<sp/>sobre<sp/>as<sp/>peças</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a42ebae9f26aa58c0f2dfdbd3838c2240" kindref="member">set_casa</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l,<sp/>CASA<sp/>casa)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(casa)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;tab[c][l]<sp/>=<sp/>BRANCA;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;ultima_jogada.coluna<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;ultima_jogada.linha<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;tab[c][l]<sp/>=<sp/>PRETA;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;tab[c][l]<sp/>=<sp/>VAZIO;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="227"><highlight class="comment">//teste</highlight></codeline>
<codeline lineno="228"><highlight class="comment"></highlight></codeline>
<codeline lineno="229"><highlight class="comment">void<sp/>teste(CASA<sp/>casa)</highlight></codeline>
<codeline lineno="230"><highlight class="comment">{</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/>switch<sp/>(casa)</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>&apos;*&apos;:</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;BRANCA&quot;);</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>&apos;#&apos;:</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;PRETA&quot;);</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/>case<sp/>&apos;.&apos;:</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;VAZIO&quot;);</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="comment">}</highlight></codeline>
<codeline lineno="244"><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>armazena<sp/>no<sp/>array<sp/>jogadas[32]<sp/>as<sp/>jogadas<sp/>à<sp/>medida<sp/>em<sp/>que<sp/>são<sp/>feitas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a52c1dbe8bebf17fb7245b067339f15a7" kindref="member">armazena_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="camada__de__dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" kindref="member">obter_jogador_atual</ref>(e)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;jogadas[<ref refid="camada__de__dados_8h_1aa58268ae314656b882a324018afe813c" kindref="member">get_jogada</ref>(e)].jogador1<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;jogadas[<ref refid="camada__de__dados_8h_1aa58268ae314656b882a324018afe813c" kindref="member">get_jogada</ref>(e)].jogador2<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_string(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[i];<sp/>i++)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putchar(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[i]);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a6a197eba64ba1a081810b849df45b170" kindref="member">fdisplay_jogadas</ref>(FILE<sp/>*fp,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>num_jogadas;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="camada__de__dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" kindref="member">obter_jogador_atual</ref>(e)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_jogadas<sp/>=<sp/><ref refid="camada__de__dados_8h_1aa58268ae314656b882a324018afe813c" kindref="member">get_jogada</ref>(e)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_jogadas<sp/>=<sp/><ref refid="camada__de__dados_8h_1aa58268ae314656b882a324018afe813c" kindref="member">get_jogada</ref>(e);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>num_jogadas<sp/>+<sp/>1;<sp/>i++)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%02d:<sp/>&quot;</highlight><highlight class="normal">,<sp/>i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1aa0414fee0f410f904a623fdd4dcb0fc3" kindref="member">imprime_play</ref>(e,<sp/>i,<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputc(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>fp);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(i<sp/>==<sp/>num_jogadas<sp/>+<sp/>1<sp/>&amp;&amp;<sp/><ref refid="camada__de__dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" kindref="member">obter_jogador_atual</ref>(e)<sp/>==<sp/>2))</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1aa0414fee0f410f904a623fdd4dcb0fc3" kindref="member">imprime_play</ref>(e,<sp/>i,<sp/>2,<sp/>fp);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputc(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>fp);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a25048b9e45970f84703c6ba286e8402c" kindref="member">le_e_escreve_jogadas</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_jogada,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jog)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jog<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;jogadas[n_jogada].jogador1.coluna<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;jogadas[n_jogada].jogador1.linha<sp/>=<sp/>lin;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;jogadas[n_jogada].jogador2.coluna<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;jogadas[n_jogada].jogador2.linha<sp/>=<sp/>lin;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>vai<sp/>ao<sp/>estado<sp/>e<sp/>introduz<sp/>o<sp/>número<sp/>de<sp/>jogadas<sp/>passado<sp/>no<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a54ce140d981c4c0610846f6f83f3bd84" kindref="member">put_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogada)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;jogada<sp/>=<sp/>jogada;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>vai<sp/>ao<sp/>estado<sp/>e<sp/>introduz<sp/>o<sp/>jogador<sp/>atual<sp/>passado<sp/>no<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a90d936573d336b4e55748f662ad50480" kindref="member">put_jogador_atual</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jog)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;jogador_atual<sp/>=<sp/>jog;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>que<sp/>efetua<sp/>todas<sp/>as<sp/>jogadas<sp/>existentes<sp/>no<sp/>array<sp/>backup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a2369b75386a716e63a53ffbbbf0c6528" kindref="member">jogar_pos</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/>JOGADAS<sp/>backup,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contador<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>1;<sp/>u<sp/>&lt;=<sp/>pos;<sp/>u++)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logica_8h_1a8c5b876f54c4650bc780c01cc3ad0f1b" kindref="member">jogar</ref>(e,<sp/>backup[u].jogador1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1a17a92ae4131164c13acc9e8e2ce134da" kindref="member">atualiza_jogadas</ref>(e);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contador++;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1a1c048d420c981c6d25777428acb43448" kindref="member">modifica_jogador_atual</ref>(e,<sp/>contador);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logica_8h_1a8c5b876f54c4650bc780c01cc3ad0f1b" kindref="member">jogar</ref>(e,<sp/>backup[u].jogador2,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1a17a92ae4131164c13acc9e8e2ce134da" kindref="member">atualiza_jogadas</ref>(e);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contador++;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1a1c048d420c981c6d25777428acb43448" kindref="member">modifica_jogador_atual</ref>(e,<sp/>contador);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contador;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a011a5fcf9286d6382fbdaf847c8e47df" kindref="member">array_backup</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/>JOGADAS<sp/>backup,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>pos;<sp/>i++)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backup[i].jogador1<sp/>=<sp/>e-&gt;jogadas[i].jogador1;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backup[i].jogador2<sp/>=<sp/>e-&gt;jogadas[i].jogador2;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aa0414fee0f410f904a623fdd4dcb0fc3" kindref="member">imprime_play</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_jogada,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador,<sp/>FILE<sp/>*fp)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>n_jogada--;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/>lin;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jogador<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>=<sp/>e-&gt;jogadas[n_jogada].jogador1.coluna;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lin<sp/>=<sp/>e-&gt;jogadas[n_jogada].jogador1.linha;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,<sp/>col<sp/>+<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>lin<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>=<sp/>e-&gt;jogadas[n_jogada].jogador2.coluna;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lin<sp/>=<sp/>e-&gt;jogadas[n_jogada].jogador2.linha;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,<sp/>col<sp/>+<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>lin<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*<ref refid="camada__de__dados_8h_1af8e1e3112fcc3ea2c118cb5833ebc6bf" kindref="member">selectcasas</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structnodo" kindref="compound">llig</ref><sp/>lista,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*tamanho)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jog<sp/>=<sp/><ref refid="camada__de__dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" kindref="member">obter_jogador_atual</ref>(e);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>save[8];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*coord<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structnodo" kindref="compound">listamalloc</ref>));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodo" kindref="compound">llig</ref><sp/>temp;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structnodo" kindref="compound">listamalloc</ref>));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>lista;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(*tamanho);<sp/>i++)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord<sp/>=<sp/>temp-&gt;head;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save[i]<sp/>=<sp/><ref refid="camada__de__dados_8h_1aa0fcaf956e4692e4c05e8744bd9b04e5" kindref="member">distanciacasas</ref>(coord,<sp/>jog);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%f<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>save[i]);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp-&gt;tail;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>menorindice<sp/>=<sp/><ref refid="listas_8h_1a9382f86f4fe3ab60886b484693bc06c5" kindref="member">menorelem</ref>(save,<sp/>tamanho);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*coordfinal<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structnodo" kindref="compound">listamalloc</ref>));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>coordfinal<sp/>=<sp/><ref refid="camada__de__dados_8h_1ada9feef24d3b13d0e5ed73c6fb10e11c" kindref="member">devolveindice</ref>(lista,<sp/>menorindice);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coordfinal;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aa52af3ec8cf78aef079bdb117cf735c4" kindref="member">jogEuclidiano</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*jog1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*jog2)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tamanho<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodo" kindref="compound">llig</ref><sp/>lista;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="listas_8h_1a3f533b20c9ab2ad5b12ea67b8de913a7" kindref="member">criar_lista</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="camada__de__dados_8h_1a12475b48973cf7cb04ca92b65aa5301e" kindref="member">armazena_posicoes</ref>(e,<sp/>lista,<sp/>&amp;tamanho);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*posicao<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structnodo" kindref="compound">listamalloc</ref>));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>posicao<sp/>=<sp/><ref refid="camada__de__dados_8h_1af8e1e3112fcc3ea2c118cb5833ebc6bf" kindref="member">selectcasas</ref>(e,<sp/>lista,<sp/>&amp;tamanho);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord<sp/>=<sp/>{posicao-&gt;coluna,<sp/>posicao-&gt;linha};</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logica_8h_1a8c5b876f54c4650bc780c01cc3ad0f1b" kindref="member">jogar</ref>(e,<sp/>coord,<sp/>jog1,<sp/>jog2);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*<ref refid="camada__de__dados_8h_1ada9feef24d3b13d0e5ed73c6fb10e11c" kindref="member">devolveindice</ref>(<ref refid="structnodo" kindref="compound">llig</ref><sp/>lista,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indice)<sp/></highlight><highlight class="comment">//[2,3,1,4,2,4,6]<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodo" kindref="compound">llig</ref><sp/>temp;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structnodo" kindref="compound">listamalloc</ref>));</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>lista;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>indice;<sp/>i++)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp-&gt;tail;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*coord<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structnodo" kindref="compound">listamalloc</ref>));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>coord<sp/>=<sp/>(temp-&gt;head);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord;</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aa0fcaf956e4692e4c05e8744bd9b04e5" kindref="member">distanciacasas</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*coord,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jog)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>catetox,<sp/>catetoy;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jog<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catetox<sp/>=<sp/>coord-&gt;coluna;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catetoy<sp/>=<sp/>coord-&gt;linha;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>sqrt((catetox<sp/>*<sp/>catetox)<sp/>+<sp/>(catetoy<sp/>*<sp/>catetoy));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Jog1<sp/>:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catetox<sp/>=<sp/>coord-&gt;coluna;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catetoy<sp/>=<sp/>coord-&gt;linha;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>sqrt((7<sp/>-<sp/>catetox)<sp/>*<sp/>(7<sp/>-<sp/>catetox)<sp/>+<sp/>(7<sp/>-<sp/>catetoy)<sp/>*<sp/>(7<sp/>-<sp/>catetoy));</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Jog2<sp/>:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><ref refid="structnodo" kindref="compound">llig</ref><sp/><ref refid="camada__de__dados_8h_1a12475b48973cf7cb04ca92b65aa5301e" kindref="member">armazena_posicoes</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structnodo" kindref="compound">llig</ref><sp/>lista,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*tamanho)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/>lin;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>*tamanho<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>col<sp/>=<sp/><ref refid="camada__de__dados_8h_1a1a7934f5355f2ca33164b8293752cf6e" kindref="member">get_coluna_anterior</ref>(e);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>lin<sp/>=<sp/><ref refid="camada__de__dados_8h_1a32c50b3f634081b92875d9618d1aec9c" kindref="member">get_linha_anterior</ref>(e);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>-<sp/>1<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>lin<sp/>+<sp/>1<sp/>&lt;=<sp/>7)<sp/>&amp;&amp;<sp/>!<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(e,<sp/>col<sp/>-<sp/>1,<sp/>lin<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord<sp/>=<sp/>{col<sp/>-<sp/>1,<sp/>lin<sp/>+<sp/>1};</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="listas_8h_1a3b000660acfaf305fe0478b37ca7e95d" kindref="member">insere_cabeca</ref>(lista,<sp/><ref refid="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" kindref="member">aloca_coord</ref>(coord));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tamanho)++;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((lin<sp/>+<sp/>1<sp/>&lt;=<sp/>7)<sp/>&amp;&amp;<sp/>!<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(e,<sp/>col,<sp/>lin<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.coluna<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.linha<sp/>=<sp/>lin<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="listas_8h_1a3b000660acfaf305fe0478b37ca7e95d" kindref="member">insere_cabeca</ref>(lista,<sp/><ref refid="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" kindref="member">aloca_coord</ref>(coord));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tamanho)++;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>+<sp/>1<sp/>&lt;=<sp/>7<sp/>&amp;&amp;<sp/>lin<sp/>+<sp/>1<sp/>&lt;=<sp/>7)<sp/>&amp;&amp;<sp/>!<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(e,<sp/>col<sp/>+<sp/>1,<sp/>lin<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.coluna<sp/>=<sp/>col<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.linha<sp/>=<sp/>lin<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="listas_8h_1a3b000660acfaf305fe0478b37ca7e95d" kindref="member">insere_cabeca</ref>(lista,<sp/><ref refid="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" kindref="member">aloca_coord</ref>(coord));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tamanho)++;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>-<sp/>1<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>lin<sp/>-<sp/>1<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>!<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(e,<sp/>col<sp/>-<sp/>1,<sp/>lin<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.coluna<sp/>=<sp/>col<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.linha<sp/>=<sp/>lin<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="listas_8h_1a3b000660acfaf305fe0478b37ca7e95d" kindref="member">insere_cabeca</ref>(lista,<sp/><ref refid="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" kindref="member">aloca_coord</ref>(coord));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tamanho)++;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((lin<sp/>-<sp/>1<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>!<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(e,<sp/>col,<sp/>lin<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.coluna<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.linha<sp/>=<sp/>lin<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="listas_8h_1a3b000660acfaf305fe0478b37ca7e95d" kindref="member">insere_cabeca</ref>(lista,<sp/><ref refid="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" kindref="member">aloca_coord</ref>(coord));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tamanho)++;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>+<sp/>1<sp/>&lt;=<sp/>7<sp/>&amp;&amp;<sp/>lin<sp/>-<sp/>1<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>!<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(e,<sp/>col<sp/>+<sp/>1,<sp/>lin<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.coluna<sp/>=<sp/>col<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.linha<sp/>=<sp/>lin<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="listas_8h_1a3b000660acfaf305fe0478b37ca7e95d" kindref="member">insere_cabeca</ref>(lista,<sp/><ref refid="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" kindref="member">aloca_coord</ref>(coord));</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tamanho)++;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>-<sp/>1<sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>!<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(e,<sp/>col<sp/>-<sp/>1,<sp/>lin))</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.coluna<sp/>=<sp/>col<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.linha<sp/>=<sp/>lin;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="listas_8h_1a3b000660acfaf305fe0478b37ca7e95d" kindref="member">insere_cabeca</ref>(lista,<sp/><ref refid="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" kindref="member">aloca_coord</ref>(coord));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tamanho)++;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((col<sp/>+<sp/>1<sp/>&lt;=<sp/>7)<sp/>&amp;&amp;<sp/>!<ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(e,<sp/>col<sp/>+<sp/>1,<sp/>lin))</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.coluna<sp/>=<sp/>col<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.linha<sp/>=<sp/>lin;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="listas_8h_1a3b000660acfaf305fe0478b37ca7e95d" kindref="member">insere_cabeca</ref>(lista,<sp/><ref refid="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" kindref="member">aloca_coord</ref>(coord));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*tamanho)++;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lista;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1ab184b82fd763449103d10b56b797c537" kindref="member">ler</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[BUF_SIZE];</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>7,<sp/>contador<sp/>=<sp/>0,<sp/>n_jogada<sp/>=<sp/>0,<sp/>col,<sp/>lin,<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(buffer,<sp/>BUF_SIZE,<sp/>fp)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;=<sp/>7<sp/>&amp;&amp;<sp/>l<sp/>&gt;=<sp/>0;<sp/>c++)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1a42ebae9f26aa58c0f2dfdbd3838c2240" kindref="member">set_casa</ref>(e,<sp/>c,<sp/>l,<sp/>buffer[c]);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l--;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contador++;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contador<sp/>&gt;=<sp/>10<sp/>&amp;&amp;<sp/>buffer[i++])</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_jogada<sp/>=<sp/>contador<sp/>-<sp/>10;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>=<sp/>buffer[4]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lin<sp/>=<sp/>buffer[5]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1a25048b9e45970f84703c6ba286e8402c" kindref="member">le_e_escreve_jogadas</ref>(e,<sp/>col,<sp/>lin,<sp/>n_jogada<sp/>+<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>=<sp/>buffer[7]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lin<sp/>=<sp/>buffer[8]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1a25048b9e45970f84703c6ba286e8402c" kindref="member">le_e_escreve_jogadas</ref>(e,<sp/>col,<sp/>lin,<sp/>n_jogada<sp/>+<sp/>1,<sp/>2);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buffer[7])</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;jogador_atual<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;jogador_atual<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;jogada<sp/>=<sp/>n_jogada<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interface_8h_1aa0b6c1689e60ac852a73d67e066c1df5" kindref="member">mostrar_tabuleiro</ref>(e);</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a77c3b8a0bfaea37ab083920b6d253537" kindref="member">gravar</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interface_8h_1a431d8c5147e6aff9748433fe276ee8d4" kindref="member">mostrar_tabuleiro_gr</ref>(fp,<sp/>e);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>fputc(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>fp);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="camada__de__dados_8h_1a6a197eba64ba1a081810b849df45b170" kindref="member">fdisplay_jogadas</ref>(fp,<sp/>e);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1acdfee083b738d1d99592edfcac794b8f" kindref="member">jogRandom</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*jog1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*jog2)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tamanho<sp/>=<sp/>0,<sp/>indice;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodo" kindref="compound">llig</ref><sp/>lista;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="listas_8h_1a3f533b20c9ab2ad5b12ea67b8de913a7" kindref="member">criar_lista</ref>();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>lista<sp/>=<sp/><ref refid="camada__de__dados_8h_1a12475b48973cf7cb04ca92b65aa5301e" kindref="member">armazena_posicoes</ref>(e,<sp/>lista,<sp/>&amp;tamanho);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>indice<sp/>=<sp/>rand()<sp/>%<sp/>tamanho;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*posicao<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structnodo" kindref="compound">listamalloc</ref>));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>posicao<sp/>=<sp/><ref refid="camada__de__dados_8h_1ada9feef24d3b13d0e5ed73c6fb10e11c" kindref="member">devolveindice</ref>(lista,<sp/>indice);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord<sp/>=<sp/>{posicao-&gt;coluna,<sp/>posicao-&gt;linha};</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logica_8h_1a8c5b876f54c4650bc780c01cc3ad0f1b" kindref="member">jogar</ref>(e,<sp/>coord,<sp/>jog1,<sp/>jog2);</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*<ref refid="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" kindref="member">aloca_coord</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*coord2<sp/>=<sp/>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref>)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>*coord2<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord2;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="camada_de_dados.c"/>
  </compounddef>
</doxygen>
