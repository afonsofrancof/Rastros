<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="camada__de__dados_8h" kind="file" language="C++">
    <compoundname>camada_de_dados.h</compoundname>
    <includes refid="listas_8h" local="yes">listas.h</includes>
    <includedby refid="camada__de__dados_8c" local="yes">camada_de_dados.c</includedby>
    <includedby refid="interface_8c" local="yes">interface.c</includedby>
    <includedby refid="listas_8c" local="yes">listas.c</includedby>
    <includedby refid="logica_8c" local="yes">logica.c</includedby>
    <includedby refid="main_8c" local="yes">main.c</includedby>
    <incdepgraph>
      <node id="11">
        <label>listas.h</label>
        <link refid="listas_8h"/>
      </node>
      <node id="10">
        <label>camada_de_dados.h</label>
        <link refid="camada__de__dados_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structCOORDENADA" prot="public">COORDENADA</innerclass>
    <innerclass refid="structJOGADA" prot="public">JOGADA</innerclass>
    <innerclass refid="structESTADO" prot="public">ESTADO</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039" prot="public" static="no">
        <name>CASA</name>
        <enumvalue id="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039abc711f491a56ec7af7a688be508c5113" prot="public">
          <name>VAZIO</name>
          <initializer>= &apos;.&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039ad24485fddec75419fd4a0cc9edda0ca5" prot="public">
          <name>BRANCA</name>
          <initializer>= &apos;*&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039a007278eb3827d19891b47cdd3ac8846d" prot="public">
          <name>PRETA</name>
          <initializer>= &apos;#&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="5" column="1" bodyfile="camada_de_dados.h" bodystart="4" bodyend="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="camada__de__dados_8h_1a94c221d29a1760f008b7834093259b7d" prot="public" static="no">
        <type><ref refid="structJOGADA" kindref="compound">JOGADA</ref></type>
        <definition>typedef JOGADA JOGADAS[32]</definition>
        <argsstring>[32]</argsstring>
        <name>JOGADAS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="23" column="1" bodyfile="camada_de_dados.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="camada__de__dados_8h_1a7e0c7e26fb685d9ab501e19b05e6954f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
        <definition>ESTADO* inicializar_estado</definition>
        <argsstring>()</argsstring>
        <name>inicializar_estado</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que inicializa o estado do jogo </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="42" column="1" bodyfile="camada_de_dados.c" bodystart="12" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a0609098f15b2ec0d7c994f7ea3667455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void empty_tabuleiro</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>empty_tabuleiro</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que esvazia o tabuleiro </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="48" column="1" bodyfile="camada_de_dados.c" bodystart="30" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_jogador_atual</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>obter_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função Função que devolve o jogador atual </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="55" column="1" bodyfile="camada_de_dados.c" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1af07a315536e57ea96b16c3e232e9eb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CASA</type>
        <definition>CASA obter_estado_casa</definition>
        <argsstring>(ESTADO *e, int c, int l)</argsstring>
        <name>obter_estado_casa</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a casa de uma certa posição </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="57" column="1" bodyfile="camada_de_dados.c" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1abac41dceaa2551d1def3f4fbb06b0758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int is_near_branca</definition>
        <argsstring>(ESTADO *estado, int colatual, int linatual)</argsstring>
        <name>is_near_branca</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>colatual</declname>
        </param>
        <param>
          <type>int</type>
          <declname>linatual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função booleana que verifica se a peça dada no input está numa posição de jogada válida </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="63" column="1" bodyfile="camada_de_dados.c" bodystart="61" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a55106112fc732be07081af171cd0ee29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_branca</definition>
        <argsstring>(ESTADO *estado, int col, int lin)</argsstring>
        <name>put_branca</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que coloca a peça branca nas coordenadas do input </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="69" column="1" bodyfile="camada_de_dados.c" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1aad79e0ccf12ac3d67684bde2f2e4ed40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_preta</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>put_preta</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que coloca uma peça preta na posição que lhe é dada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="75" column="1" bodyfile="camada_de_dados.c" bodystart="82" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a6bf7f42979ba1ed2a8046535ff25ccb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atualiza_ultima_jogada</definition>
        <argsstring>(ESTADO *estado, int col, int lin)</argsstring>
        <name>atualiza_ultima_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que coloca uma peça preta nas coordenadas da jogada anterior </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="81" column="1" bodyfile="camada_de_dados.c" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verifica_preta</definition>
        <argsstring>(ESTADO *estado, int col, int lin)</argsstring>
        <name>verifica_preta</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que atualiza a ultima jogada para a jogada que acabou de ser feita </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="87" column="1" bodyfile="camada_de_dados.c" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1adc98a40a697ff1c913c883b907bc9b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pode_mover</definition>
        <argsstring>(ESTADO *estado, int col, int lin)</argsstring>
        <name>pode_mover</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que determina se o jogador se pode mover tendo em conta todos os possíveis obstáculos como os cantos do tabuleiro e a existencia de peças pretas no caminho </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="93" column="1" bodyfile="camada_de_dados.c" bodystart="110" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a1c048d420c981c6d25777428acb43448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modifica_jogador_atual</definition>
        <argsstring>(ESTADO *estado, int contador)</argsstring>
        <name>modifica_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contador</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que modifica o jogador atual </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="99" column="1" bodyfile="camada_de_dados.c" bodystart="139" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a1a7934f5355f2ca33164b8293752cf6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_coluna_anterior</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>get_coluna_anterior</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a coluna anterior através do estado </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="105" column="1" bodyfile="camada_de_dados.c" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a32c50b3f634081b92875d9618d1aec9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_linha_anterior</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>get_linha_anterior</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a linha anterior através do estado </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="111" column="1" bodyfile="camada_de_dados.c" bodystart="163" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a84c6048afd16375832682a6149460797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_coluna</definition>
        <argsstring>(COORDENADA coord)</argsstring>
        <name>get_coluna</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a coluna da coordenada dada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="117" column="1" bodyfile="camada_de_dados.c" bodystart="172" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a75b3b7a34bef41ea011c00483af81490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_linha</definition>
        <argsstring>(COORDENADA coord)</argsstring>
        <name>get_linha</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a linha da coordenada dada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="123" column="1" bodyfile="camada_de_dados.c" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1aa58268ae314656b882a324018afe813c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_jogada</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>get_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que obtem a jogada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="129" column="1" bodyfile="camada_de_dados.c" bodystart="190" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a17a92ae4131164c13acc9e8e2ce134da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int atualiza_jogadas</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>atualiza_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que atualiza o número de jogadas através dependendo do jogador atual </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="135" column="1" bodyfile="camada_de_dados.c" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a42ebae9f26aa58c0f2dfdbd3838c2240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_casa</definition>
        <argsstring>(ESTADO *e, int c, int l, CASA casa)</argsstring>
        <name>set_casa</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>l</declname>
        </param>
        <param>
          <type>CASA</type>
          <declname>casa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que analiza o tabuleiro imprimido e adiciona a informação que recebe sobre as peças </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="141" column="1" bodyfile="camada_de_dados.c" bodystart="209" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a52c1dbe8bebf17fb7245b067339f15a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void armazena_jogada</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>armazena_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que armazena no array jogadas[32] as jogadas à medida em que são feitas </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="147" column="1" bodyfile="camada_de_dados.c" bodystart="249" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a6a197eba64ba1a081810b849df45b170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fdisplay_jogadas</definition>
        <argsstring>(FILE *fp, ESTADO *e)</argsstring>
        <name>fdisplay_jogadas</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que armazena no array jogadas[32] as jogadas à medida em que são feitas</para><para>Função que imprime as jogadas efetuadas até aquela etapa do jogo, com os repetivos números das jogadas </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="153" column="1" bodyfile="camada_de_dados.c" bodystart="271" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a25048b9e45970f84703c6ba286e8402c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void le_e_escreve_jogadas</definition>
        <argsstring>(ESTADO *e, int col, int lin, int n_jogada, int jog)</argsstring>
        <name>le_e_escreve_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_jogada</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que recebe uma coluna e uma linha e atualiza o array jogadas </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="159" column="1" bodyfile="camada_de_dados.c" bodystart="292" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a54ce140d981c4c0610846f6f83f3bd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_jogada</definition>
        <argsstring>(ESTADO *e, int jogada)</argsstring>
        <name>put_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogada</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que vai ao estado e introduz o número de jogadas passado no input </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="165" column="1" bodyfile="camada_de_dados.c" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a90d936573d336b4e55748f662ad50480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_jogador_atual</definition>
        <argsstring>(ESTADO *e, int jog)</argsstring>
        <name>put_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função muda o jogador atual </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="171" column="1" bodyfile="camada_de_dados.c" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a2369b75386a716e63a53ffbbbf0c6528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogar_pos</definition>
        <argsstring>(ESTADO *e, JOGADAS backup, int pos)</argsstring>
        <name>jogar_pos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>JOGADAS</type>
          <declname>backup</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que efetua todas as jogadas existentes no array backup </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="177" column="1" bodyfile="camada_de_dados.c" bodystart="322" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a011a5fcf9286d6382fbdaf847c8e47df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void array_backup</definition>
        <argsstring>(ESTADO *e, JOGADAS backup, int pos)</argsstring>
        <name>array_backup</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>JOGADAS</type>
          <declname>backup</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que copia as jogadas do array JOGADAS[32] para o array backup </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="182" column="1" bodyfile="camada_de_dados.c" bodystart="339" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1aa0414fee0f410f904a623fdd4dcb0fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void imprime_play</definition>
        <argsstring>(ESTADO *e, int n_jogada, int jogador, FILE *fp)</argsstring>
        <name>imprime_play</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_jogada</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que imprime somente as jogadas no file pointer passado no input </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="188" column="1" bodyfile="camada_de_dados.c" bodystart="348" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1af8e1e3112fcc3ea2c118cb5833ebc6bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref> *</type>
        <definition>COORDENADA* selectcasas</definition>
        <argsstring>(ESTADO *e, llig lista, int *tamanho)</argsstring>
        <name>selectcasas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>lista</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>tamanho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que copia os elemntos da lista ligada para um array, para que possa ser percorrido e determinado a coordenada da jogada que o bot irá efetuar </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="194" column="1" bodyfile="camada_de_dados.c" bodystart="368" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ada9feef24d3b13d0e5ed73c6fb10e11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref> *</type>
        <definition>COORDENADA* devolveindice</definition>
        <argsstring>(llig lista, int indice)</argsstring>
        <name>devolveindice</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>lista</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que vai à lista passada no input e devolve o elemento com o respetivo índice </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="200" column="1" bodyfile="camada_de_dados.c" bodystart="401" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1aa0fcaf956e4692e4c05e8744bd9b04e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float distanciacasas</definition>
        <argsstring>(COORDENADA *coord, int jog)</argsstring>
        <name>distanciacasas</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref> *</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jog</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que calcula a distância da posição atual do jogador até ao objetivo </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="206" column="1" bodyfile="camada_de_dados.c" bodystart="415" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1aa52af3ec8cf78aef079bdb117cf735c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jogEuclidiano</definition>
        <argsstring>(ESTADO *e, int *jog1, int *jog2)</argsstring>
        <name>jogEuclidiano</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jog1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jog2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que faz com o que bot efetue uma jogada segundo a sua estratégia </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="212" column="1" bodyfile="camada_de_dados.c" bodystart="389" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a12475b48973cf7cb04ca92b65aa5301e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnodo" kindref="compound">llig</ref></type>
        <definition>llig armazena_posicoes</definition>
        <argsstring>(ESTADO *e, llig lista, int *tamanho)</argsstring>
        <name>armazena_posicoes</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>lista</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>tamanho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Função que aramzena na lista todas as jogadas possíveis que o bot pode fazer no momento </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="218" column="1" bodyfile="camada_de_dados.c" bodystart="437" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ab184b82fd763449103d10b56b797c537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ler</definition>
        <argsstring>(ESTADO *e, char *filename)</argsstring>
        <name>ler</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Le o estado a partir de um ficheiro </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="223" column="1" bodyfile="camada_de_dados.c" bodystart="502" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a77c3b8a0bfaea37ab083920b6d253537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gravar</definition>
        <argsstring>(ESTADO *e, char *filename)</argsstring>
        <name>gravar</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Grava o estado do jogo num ficheiro </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="227" column="1" bodyfile="camada_de_dados.c" bodystart="537" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref> *</type>
        <definition>COORDENADA* aloca_coord</definition>
        <argsstring>(COORDENADA c)</argsstring>
        <name>aloca_coord</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Aloca espaço na memória para uma coordenada e devolve o apontador da nova coordenada </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="232" column="1" bodyfile="camada_de_dados.c" bodystart="560" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1acdfee083b738d1d99592edfcac794b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jogRandom</definition>
        <argsstring>(ESTADO *e, int *jog1, int *jog2)</argsstring>
        <name>jogRandom</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jog1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jog2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implementação da segunda heurística </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="237" column="1" bodyfile="camada_de_dados.c" bodystart="547" bodyend="558"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Estado e funções que o manipulam </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>CAMADA_DADOS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMADA_DADOS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="listas_8h" kindref="compound">listas.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>VAZIO<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>BRANCA<sp/>=<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>PRETA<sp/>=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">}<sp/>CASA;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="structCOORDENADA" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coluna;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linha;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structJOGADA" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>jogador1;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>jogador2;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}<sp/><ref refid="structJOGADA" kindref="compound">JOGADA</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structJOGADA" kindref="compound">JOGADA</ref><sp/>JOGADAS[32];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structESTADO" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>CASA<sp/>tab[8][8];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>ultima_jogada;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>JOGADAS<sp/>jogadas;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador_atual;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogada;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<ref refid="camada__de__dados_8h_1a7e0c7e26fb685d9ab501e19b05e6954f" kindref="member">inicializar_estado</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a0609098f15b2ec0d7c994f7ea3667455" kindref="member">empty_tabuleiro</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="55"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" kindref="member">obter_jogador_atual</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">CASA<sp/><ref refid="camada__de__dados_8h_1af07a315536e57ea96b16c3e232e9eb54" kindref="member">obter_estado_casa</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1abac41dceaa2551d1def3f4fbb06b0758" kindref="member">is_near_branca</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colatual,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linatual);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a55106112fc732be07081af171cd0ee29" kindref="member">put_branca</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aad79e0ccf12ac3d67684bde2f2e4ed40" kindref="member">put_preta</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a6bf7f42979ba1ed2a8046535ff25ccb1" kindref="member">atualiza_ultima_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a1f4df241c1ad82e53a8a13cd6fcb9058" kindref="member">verifica_preta</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1adc98a40a697ff1c913c883b907bc9b89" kindref="member">pode_mover</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a1c048d420c981c6d25777428acb43448" kindref="member">modifica_jogador_atual</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contador);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a1a7934f5355f2ca33164b8293752cf6e" kindref="member">get_coluna_anterior</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a32c50b3f634081b92875d9618d1aec9c" kindref="member">get_linha_anterior</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a84c6048afd16375832682a6149460797" kindref="member">get_coluna</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a75b3b7a34bef41ea011c00483af81490" kindref="member">get_linha</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aa58268ae314656b882a324018afe813c" kindref="member">get_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a17a92ae4131164c13acc9e8e2ce134da" kindref="member">atualiza_jogadas</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a42ebae9f26aa58c0f2dfdbd3838c2240" kindref="member">set_casa</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l,<sp/>CASA<sp/>casa);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a52c1dbe8bebf17fb7245b067339f15a7" kindref="member">armazena_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a6a197eba64ba1a081810b849df45b170" kindref="member">fdisplay_jogadas</ref>(FILE<sp/>*fp,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a25048b9e45970f84703c6ba286e8402c" kindref="member">le_e_escreve_jogadas</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_jogada,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jog);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a54ce140d981c4c0610846f6f83f3bd84" kindref="member">put_jogada</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogada);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a90d936573d336b4e55748f662ad50480" kindref="member">put_jogador_atual</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jog);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a2369b75386a716e63a53ffbbbf0c6528" kindref="member">jogar_pos</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/>JOGADAS<sp/>backup,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a011a5fcf9286d6382fbdaf847c8e47df" kindref="member">array_backup</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/>JOGADAS<sp/>backup,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aa0414fee0f410f904a623fdd4dcb0fc3" kindref="member">imprime_play</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_jogada,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador,<sp/>FILE<sp/>*fp);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*<ref refid="camada__de__dados_8h_1af8e1e3112fcc3ea2c118cb5833ebc6bf" kindref="member">selectcasas</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structnodo" kindref="compound">llig</ref><sp/>lista,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*tamanho);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*<ref refid="camada__de__dados_8h_1ada9feef24d3b13d0e5ed73c6fb10e11c" kindref="member">devolveindice</ref>(<ref refid="structnodo" kindref="compound">llig</ref><sp/>lista,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indice);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aa0fcaf956e4692e4c05e8744bd9b04e5" kindref="member">distanciacasas</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*coord,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jog);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1aa52af3ec8cf78aef079bdb117cf735c4" kindref="member">jogEuclidiano</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*jog1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*jog2);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="structnodo" kindref="compound">llig</ref><sp/><ref refid="camada__de__dados_8h_1a12475b48973cf7cb04ca92b65aa5301e" kindref="member">armazena_posicoes</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structnodo" kindref="compound">llig</ref><sp/>lista,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*tamanho);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1ab184b82fd763449103d10b56b797c537" kindref="member">ler</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="227"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1a77c3b8a0bfaea37ab083920b6d253537" kindref="member">gravar</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*<ref refid="camada__de__dados_8h_1ae38a7327a92c590b3d6c53e7891b609f" kindref="member">aloca_coord</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="camada__de__dados_8h_1acdfee083b738d1d99592edfcac794b8f" kindref="member">jogRandom</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*jog1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*jog2);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="camada_de_dados.h"/>
  </compounddef>
</doxygen>
