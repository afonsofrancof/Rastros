<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="listas_8h" kind="file" language="C++">
    <compoundname>listas.h</compoundname>
    <includedby refid="camada__de__dados_8c" local="yes">camada_de_dados.c</includedby>
    <includedby refid="camada__de__dados_8h" local="yes">camada_de_dados.h</includedby>
    <includedby refid="interface_8c" local="yes">interface.c</includedby>
    <includedby refid="listas_8c" local="yes">listas.c</includedby>
    <invincdepgraph>
      <node id="35">
        <label>listas.h</label>
        <link refid="listas_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>camada_de_dados.h</label>
        <link refid="camada__de__dados_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structnodo" prot="public">nodo</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="listas_8h_1aec202d8cd9b7e0e37574931643229870" prot="public" static="no">
        <type>struct <ref refid="structnodo" kindref="compound">nodo</ref> *</type>
        <definition>typedef struct nodo *  llig</definition>
        <argsstring></argsstring>
        <name>llig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="8" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="listas_8h_1ab3d5960ebb3ef31520e13831aabd7c7d" prot="public" static="no">
        <type>struct <ref refid="structnodo" kindref="compound">nodo</ref></type>
        <definition>typedef struct nodo  listamalloc</definition>
        <argsstring></argsstring>
        <name>listamalloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="8" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="listas_8h_1a3f533b20c9ab2ad5b12ea67b8de913a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnodo" kindref="compound">llig</ref></type>
        <definition>llig criar_lista</definition>
        <argsstring>()</argsstring>
        <name>criar_lista</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cria uma lista vazia </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="17" column="1" bodyfile="listas.c" bodystart="9" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1a3b000660acfaf305fe0478b37ca7e95d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnodo" kindref="compound">llig</ref></type>
        <definition>llig insere_cabeca</definition>
        <argsstring>(llig L, void *valor)</argsstring>
        <name>insere_cabeca</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>L</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>valor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insere um valor na cabeça da lista </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="21" column="1" bodyfile="listas.c" bodystart="17" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1ae0629c9fcb27ca78d3e0f23e43399fa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* devolve_cabeca</definition>
        <argsstring>(llig L)</argsstring>
        <name>devolve_cabeca</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Devolve a cabeça da lista </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="25" column="1" bodyfile="listas.c" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1a004488958386a9d9cde72853c6d95980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnodo" kindref="compound">llig</ref></type>
        <definition>llig proximo</definition>
        <argsstring>(llig L)</argsstring>
        <name>proximo</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Devolve a cauda da lista </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="29" column="1" bodyfile="listas.c" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1a1907baaf7c56752c0508e5dc0198f1da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnodo" kindref="compound">llig</ref></type>
        <definition>llig remove_cabeca</definition>
        <argsstring>(llig L)</argsstring>
        <name>remove_cabeca</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a cabeça da lista (libertando o espaço ocupado) e devolve a cauda </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="33" column="1" bodyfile="listas.c" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1a04ef0ee31d481227d9765b65f38b33ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lista_esta_vazia</definition>
        <argsstring>(llig L)</argsstring>
        <name>lista_esta_vazia</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">llig</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Devolve verdareiro se a lista é vazia </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="37" column="1" bodyfile="listas.c" bodystart="41" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="listas_8h_1a9382f86f4fe3ab60886b484693bc06c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int menorelem</definition>
        <argsstring>(float *save, int *tamanho)</argsstring>
        <name>menorelem</name>
        <param>
          <type>float *</type>
          <declname>save</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>tamanho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determina o índice do menor elemento do array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="listas.h" line="41" column="1" bodyfile="listas.c" bodystart="49" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Modulo de listas ligadas </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LISTAS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LISTAS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="structnodo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnodo" kindref="compound">nodo</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*head;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnodo" kindref="compound">nodo</ref><sp/>*tail;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}<sp/>*<sp/><ref refid="structnodo" kindref="compound">llig</ref>,<sp/><ref refid="structnodo" kindref="compound">listamalloc</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="structnodo" kindref="compound">llig</ref><sp/><ref refid="listas_8h_1a3f533b20c9ab2ad5b12ea67b8de913a7" kindref="member">criar_lista</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="structnodo" kindref="compound">llig</ref><sp/><ref refid="listas_8h_1a3b000660acfaf305fe0478b37ca7e95d" kindref="member">insere_cabeca</ref>(<ref refid="structnodo" kindref="compound">llig</ref><sp/>L,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*valor);</highlight></codeline>
<codeline lineno="25"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="listas_8h_1ae0629c9fcb27ca78d3e0f23e43399fa0" kindref="member">devolve_cabeca</ref>(<ref refid="structnodo" kindref="compound">llig</ref><sp/>L);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="structnodo" kindref="compound">llig</ref><sp/><ref refid="listas_8h_1a004488958386a9d9cde72853c6d95980" kindref="member">proximo</ref>(<ref refid="structnodo" kindref="compound">llig</ref><sp/>L);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="structnodo" kindref="compound">llig</ref><sp/><ref refid="listas_8h_1a1907baaf7c56752c0508e5dc0198f1da" kindref="member">remove_cabeca</ref>(<ref refid="structnodo" kindref="compound">llig</ref><sp/>L);</highlight></codeline>
<codeline lineno="37"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="listas_8h_1a04ef0ee31d481227d9765b65f38b33ea" kindref="member">lista_esta_vazia</ref>(<ref refid="structnodo" kindref="compound">llig</ref><sp/>L);</highlight></codeline>
<codeline lineno="41"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="listas_8h_1a9382f86f4fe3ab60886b484693bc06c5" kindref="member">menorelem</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*save,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*tamanho);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="listas.h"/>
  </compounddef>
</doxygen>
